//Дано число. написать функцию, которая считает факториал числа.
function fuctorial(num) {
	let res = 1

	//Если заданное число ноль то ответ 1
	if (num === 0) {
		return res;
	} else if (num > 0) {
		//Цикл производит умножение пока не сравняеться с атрибутом функции
		for (let i = 1; i <= num; i++) {
			//записуем результат
			res = res * i;
		}
		return res;
	}
}



/*==========================================
=============================================*/
//Дано число. написать функцию, которая выводит консоль числа фебоначи до заданного.
function fib(n) {
	let a = 1;
	let b = 1;
	console.log(a);
	console.log(b);


	//запускаем цикл пока не сравняемся с аргументом функции
	for (let i = 3; i <= n; i++) {
		//получаем след. число из последовательности
		let c = a + b;
		//обновляем два последних значиния
		a = b;
		b = c;
		//выводим крайнее значение
		console.log(b);
	}
}

function fib2(num) {
	let arr = [
		1,
		1,
	];

	//если хотим узнать первое число из последовательности феб...
	if (num === 1) {
		console.log(arr[arr.length - 2]);
		//если первые два
	} else if (num === 2) {
		console.log(arr);
		//если хотим узнать больше двух чисел
	} else {
		//начинаем с третего числа так как первые два занесены в стоковый массив
		for (let i = 3; i <= num; i++) {
			//суммируем последние два числа массива (он же последовательность)
			let res = arr[arr.length - 2] + arr[arr.length - 1];
			//вносим в масиив полученое новое число
			arr.push(res);
		}
		console.log(arr);
	}
}


/*=================================================
==================================================*/
//Дана строка. написать функцию, которая возвращает значение true, если строка является палиндромом, и false — если нет.
function isPalindrome(str) {
	//делим строку в масив побуквенно. Переворачиваем. Соединяем в строку
	let strReverse = str.split('').reverse().join('');
	//Сравниваем перевернутую строку с оригинналом
	return str === strReverse;
}

let test = isPalindrome('abcdedcba');//аргумент обязательно строка в кавычках
let test2 = isPalindrome('abcded');

// console.log(test);
// console.log(test2);




/*=============================================
================================================*/
//Даны две строки. написать функцию, которая проверяет, являются ли строки анаграммами (регистр букв не имеет значения).
function isAnagram(original, test) {
	//Регулярное выражение \s+ находит все whitespace символы в строке, меняем их на пустую строку.Переводим все к нижнему регистру. Делим в масив. Сортируем. Составляем строку
	let firstString = original.replace(/\s+/g, '').toLowerCase().split('').sort().join('');
	let secondString = test.replace(/\s+/g, '').toLowerCase().split('').sort().join('');

	//Cравниваем полученые строки
	return firstString === secondString;
}

let str1 = "test qwert";
let str2 = "stte trewq";

isAnagram(str1, str2);



/*=============================================
=============================================*/
//Даны две даты. написать функцию, которая определяет сколько дней прошло между ними.
function howManyDays(date1, date2) {
	//Создаем обьекты Date
	let dateA = new Date(date1);//как вариант можно записать в милисек Date.parse(date1)
	let dateB = new Date(date2);

	//Вычисляем разницу в милисекундах и переводим в дни
	let res = (dateA - dateB) / 1000 / 60 / 60 / 24;
	//Если результат положительный то выводим, если отрицательный то убераем минус и выводим
	res > 0 ? console.log(res) : console.log(res * -1);
}

let date1 = "2017-01-01";
let date2 = "2017-01-03";



/*================================================
===================================================*/
//Дано число. написать функцию решения счастливого билета (сумма первых 3х цифр равно сумме вторых 3х)
function isLucky(number) {
	//Конвектируем в строку, делим в отдельные елементы массива, конвектируем полученые елементы обратно с числа
	let num = String(number).split("").map(Number);

	//создаем два массива, правая часть и левая. 
	let arrL = num.slice(0, num.length / 2);
	let arrR = num.slice(num.length / 2);

	//Методом reduce суммируем числа из элементов массива
	let sumL = arrL.reduce(function (sum, current) {
		return sum + current
	}, 0);
	let sumR = arrR.reduce(function (sum, current) {
		return sum + current
	}, 0);

	//Сравниваем суммы чисел двух половинок номера и выволим результат
	console.log(sumL === sumR);
}




/*===========================================
============================================*/
//Дано число. вычислить сумму n последних цифр числа m
function sumLastNum(m, n) {
	//Конвектируем в строку, делим в отдельные елементы массива, конвектируем полученые елементы обратно с числа
	let num = String(m).split("").map(Number);

	//Запускаем reduce. Если индекс массива попадает в вилку последних "n" чисел суммируем их значения 
	let sum = num.reduce(function (sum, item, index) {
		if (index >= num.length - n) {
			sum += item;
		}
		return sum;
	}, 0);
	//выводим результат
	console.log(sum);
}


/*====================================
========================================*/
//Дан массив чисел. определить сколько раз менялся знак в последовательности
function howManySign(arr) {
	//счетчик
	let calc = 0;

	//запускаем цикл пока счетчик "i" меньше длины массива
	for (i = 0; i < arr.length; i++) {
		//добавляю переменную чтоб в последствии не сбивать счетчик "i"
		let n = i++;
		//если знак текущего элемента не совпадает с знаком следующего увеличиваем счетчик "calc" на 1
		if (Math.sign(arr[i]) != Math.sign(arr[n])) {
			calc++;
		}
	}
	console.log(calc);
}




/*=================================================
===================================================*/
//Дан массив чисел. определить упорядочена ли последовательность
function isSort(arr) {
	//ответ
	let answer = true;

	//создаем копию изначального массива
	let notSort = arr.concat();
	//сортируем изначчальный массив
	let sortArr = arr.sort((a, b) => a - b);

	console.log(notSort);
	console.log(sortArr);

	//поэлементно сравниваем копию изначального массива с отсортированным массиивом
	for (i = 0; i < arr.length; i++) {
		if (notSort[i] != sortArr[i]) {
			answer = false;
		}
	}
	console.log(answer);
}

//Не стандартное решение
function isSorSecond(arr) {
	let notSort = arr.concat();
	let sortArr = arr.sort((a, b) => a - b);
	//В случае сравнивания "строковых" вариантов одинаковых массивов ответ true
	console.log(JSON.stringify(notSort) == JSON.stringify(sortArr));
}




/*================================================
================================================*/
//Дан массив букв. определить упорядочена ли последовательность
function isSortLetter(arr) {
	//ответ
	let answer = true;

	//создаем копию изначального массива
	let notSort = arr.concat();
	//сортируем изначчальный массив
	let sortArr = arr.sort();

	console.log(notSort);
	console.log(sortArr);

	//поэлементно сравниваем копию изначального массива с отсортированным массиивом
	for (i = 0; i < arr.length; i++) {
		if (notSort[i] != sortArr[i]) {
			answer = false;
		}
	}
	console.log(answer);
}

// let a = ["a", "c", "b"];
// console.log(a);
// console.log(isSortLetter(a));




/*=========================================
============================================*/
//Дан массив с числами. Не используя метода reverse переверните его элементы в обратном порядке.
function rev(arr) {
	//Создаю пустой массив
	let res = [];

	//i=индексу последнего элемента массива, пока счетчик не пройдет все элементы массива 
	for (let i = arr.length - 1; i >= 0; i--) {
		//пушим  новый массив эелементы заданного по порядку с конца, тем самым разворачивая массив
		res.push(arr[i]);
	}
	return res;
}
// console.log(rev(a));




/*========================================
===========================================*/
/*Нарисуйте пирамиду в консоли, как показано ниже:
	1
	22
	333
	4444
	55555
	666666
	7777777
	88888888
	999999999
	*/
function generatePyramid() {
	//i = 1, пока i меньше 10...
	for (i = 1; i < 10; i++) {
		//Преобразуем i к строке, так как метод "repeat" работает с строкамии и собственно репитем его i раз командой repeat(i)
		console.log(String(i).repeat(i));
	}
}
// console.log(generatePyramid());




/*============================================
===============================================*/
/*Дан двухмерный массив с числами, например `[[1, 2, 3], [4, 5], [6]]`. Найдите сумму элементов этого массива.
Массив, конечно же, может быть произвольным.*/
function arrSum(arr) {
	var sum = 0;

	//перебираем массив 
	arr.forEach(function (v) {
		//проверяем элементы массива являються ли они масивами
		if (typeof v == "object") {
			//если да то закидываем элемент в наш функцию создавая тем самым уровень рекурсии
			sum += arrSum(v);
		} else {
			//если нет то суммируем значенния
			sum += v
		}
	})
	return sum;
}
// let arrTest = [[1, 2, 3], [4, 5], [6], 9, [5, [5]]];
// console.log(arrSum(arrTest));



/*============================
================================*/
//Найдите все года от 1 до 2020, сумма цифр которых равна 13.
function happy13(start, end) {
	//подготовил паустой массив чтоб в него мапить цифры
	let num;
	//массив для ответов
	let list = [];

	//стартуем с и до
	for (i = start; i <= end; i++) {
		//а вот тут интересно))) Переводим год в строку. split делаем массив из цифр года в тексnовом формате.map(Number)Мапим массив переводz цифры из cтроковой формы в чиисловую.reduce Суммирцем элементы массива и наконец стравниваем с 13, фух вроде все))
		if (num = String(i).split("").map(Number).reduce((acc, elem) => acc + elem, 0) === 13) {
			//если сравнение выше дало истину то пушим год в массив с ответами
			list.push(i);
		}
	}
	console.log(list);
}




/*================================
====================================*/
//Дана строка вида 'var_text_hello'. Сделайте из него текст 'varTextHello'
function toCamelCase(str) {
	//спличу строку на элементы массива по разделителю"_"
	let arr = str.split("_");

	//перебираю массив
	let strCC = arr.map((word, index) => {
		//если индекс слова равен 0 
		if (index === 0) {
			//просто возвращаю слово нетронутым
			return word;
		} else {
			//иначе первый символ слова делаю заглавным и добавляю к нему остаток слова 
			return word[0].toUpperCase() + word.slice(1);
		}
	});

	//клею массив в одно слово
	let q = strCC.join('');
	return q;
}





/*=====================================
=======================================*/
/*Дано число. Сложите его цифры. Если сумма получилась больше 9-ти, опять сложите его цифры. И так, пока сумма не
станет однозначным числом (9 и менее).*/
function lessThan9(num) {
	//если переданное число меньше 10 
	if (num < 10) {
		//выводим его (выход) 
		console.log(num);
	} else { //иначе
		//в строку. Делин в посимвольно в масив. Мапим из строк в числа. Склдываем числа 
		let sum = String(num).split("").map(Number).reduce((a, b) => a + b, 0);
		//Закидываем полученый результат на проверку
		lessThan9(sum);
	}
}